/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY 0
#define NUM 1
#define STICKY_NUM 2
#define FBRACKET 3
#define BT_NAV 4
#define WASD 5
#define MISC 6

/ {
    tpad_central_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint0>;
        y-invert;
        scale-multiplier = <2>;
    };

    tpad_peripheral_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <QWERTY NUM STICKY_NUM FBRACKET BT_NAV WASD, MISC>;
        y-invert;
        scale-multiplier = <2>;
    };

    tpad_peripheral_scroll {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <BT_NAV>;

        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_HWHEEL>;
        y-input-code = <INPUT_REL_WHEEL>;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };
};

&caps_word {
};

/ {
    macros {
        bs_word: bs_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "BS_WORD";
        };

        left_word: left_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "LEFT_WORD";
        };

        right_word: right_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "RIGHT_WORD";
        };

        kp_then_to_layer0: key_then_layer_switch {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 0>;

            label = "KEY_THEN_LAYER_SWITCH";
        };
    };

    behaviors {
        alt_code: alt_code {
            compatible = "zmk,behavior-caps-word";
            label = "ALT_CODE";
            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            continue-list = <KP_NUMBER_1 KP_NUMBER_2 KP_NUMBER_3 KP_NUMBER_4 KP_NUMBER_5 KP_NUMBER_6 KP_NUMBER_7 KP_NUMBER_8 KP_NUMBER_9 KP_NUMBER_0 NUMBER_1 NUMBER_2 NUMBER_3 NUMBER_4 NUMBER_7 NUMBER_5 NUMBER_6 NUMBER_8 NUMBER_9 NUMBER_0 KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0>;
        };

        hrm_ctrl_alt: hrm_ctrl_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_CTRL_ALT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <0>;
        };

        shift_word: shift_word {
            compatible = "zmk,behavior-caps-word";
            label = "SHIFT_WORD";
            #binding-cells = <0>;
            continue-list = <KP_NUMBER_1 KP_NUMBER_2 KP_NUMBER_3 KP_NUMBER_4 KP_NUMBER_5 KP_NUMBER_6 KP_NUMBER_7 KP_NUMBER_8 KP_NUMBER_9 KP_NUMBER_0 BACKSPACE UNDERSCORE>;
            mods = <(MOD_LSFT)>;
        };

        lt_layer: lt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <0>;
            flavor = "tap-unless-interrupted";
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <3000>;
        };

        hrm_shift: hrm_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <250>;
        };

        ht_layer: ht_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <3000>;
        };
    };

    combos {
        compatible = "zmk,combos";

        df-nav {
            bindings = <&mo 4>;
            key-positions = <13 12>;
        };

        kl-bs-word {
            bindings = <&bs_word>;
            key-positions = <17 18>;
            layers = <0 1 3>;
        };

        rgui {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <35 37>;
        };

        lgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <34 32>;
        };

        lword {
            bindings = <&left_word>;
            key-positions = <16 15>;
            layers = <4>;
        };

        rword {
            bindings = <&right_word>;
            key-positions = <17 18>;
            layers = <4>;
        };

        combo-shift-r {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <27 28>;
        };

        combo-shift-l {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <22 21>;
        };

        mouse {
            bindings = <&mo 5>;
            key-positions = <5 6>;
            require-prior-idle-ms = <250>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <8 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "qwerty";
            bindings = <
  &kp Q    &kp W                     &kp E                    &kp R                  &kp T     &kp Y       &kp U                  &kp I                         &kp O                           &kp P
  &kp A    &kp S                     &kp D                    &kp F                  &kp G     &kp H       &kp J                  &kp K                         &kp L                           &kp SINGLE_QUOTE
  &kp Z    &hrm_ctrl_alt LEFT_ALT X  &hrm_shift LEFT_SHIFT C  &hrm_ctrl_alt LCTRL V  &kp B     &kp N       &hrm_ctrl_alt RCTRL M  &hrm_shift RIGHT_SHIFT COMMA  &hrm_ctrl_alt RIGHT_ALT PERIOD  &kp FSLH
  &kp TAB  &kp LCTRL                 &ht_layer 1 2            &lt_layer 6 TAB        &kp CAPS  &kp ESCAPE  &kp SEMI               &kp SPACE                     &ht 3 ENTER                     &kp ENTER
            >;
        };

        numbers {
            display-name = "numbers";
            bindings = <
  &kp EXCL         &kp AT           &kp HASH         &kp DLLR         &kp PRCNT        &kp CARET        &kp AMPS         &kp ASTRK        &kp LPAR         &kp RPAR
  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
  &kp TILDE        &kp GRAVE        &trans           &trans           &kp BACKSLASH    &kp MINUS        &kp UNDER        &trans           &trans           &trans
  &kp LEFT         &kp RIGHT        &trans           &trans           &trans           &trans           &kp BACKSPACE    &trans           &kp DELETE       &trans
            >;
        };

        sticky_numbers {
            display-name = "sticky numbers";
            bindings = <
  &kp EXCL         &kp AT           &kp HASH         &kp DLLR                &kp PRCNT        &kp CARET               &kp AMPS         &kp ASTRK                 &kp LPAR                  &kp RPAR
  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4         &kp KP_NUMBER_5  &kp KP_NUMBER_6         &kp KP_NUMBER_7  &kp KP_NUMBER_8           &kp KP_NUMBER_9           &kp KP_NUMBER_0
  &kp TILDE        &kp GRAVE        &trans           &trans                  &kp BACKSLASH    &kp MINUS               &kp UNDER        &trans                    &trans                    &trans
  &kp LEFT         &kp RIGHT        &trans           &kp_then_to_layer0 TAB  &trans           &kp_then_to_layer0 ESC  &kp BACKSPACE    &kp_then_to_layer0 SPACE  &kp_then_to_layer0 ENTER  &trans
            >;
        };

        function_bracket {
            display-name = "brackets";
            bindings = <
  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans     &kp KP_NUMLOCK         &kp INSERT         &kp PAUSE_BREAK  &kp PRINTSCREEN
  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &kp MINUS  &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp COLON
  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &kp UNDER  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp SEMI
  &trans  &trans   &mo 4    &trans   &trans  &trans     &trans                 &trans             &trans           &trans
            >;
        };

        bt_nav {
            display-name = "nav";
            bindings = <
  &trans        &trans     &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  &kp LEFT_ALT  &kp LSHFT  &trans  &trans  &trans  &kp LEFT        &kp DOWN      &kp UP        &kp RIGHT     &trans
  &trans        &trans     &trans  &trans  &trans  &kp HOME        &kp PG_DN     &kp PG_UP     &kp END       &trans
  &trans        &trans     &trans  &trans  &trans  &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &trans
            >;
        };

        wasd_mouse {
            display-name = "mouse";
            bindings = <
  &trans  &trans          &kp UP_ARROW  &trans     &trans     &trans     &trans          &kp UP_ARROW  &trans     &trans
  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans     &trans     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
  &trans  &trans          &trans        &trans     &trans     &trans     &trans          &trans        &trans     &trans
  &to 0   &trans          &mkp RCLK     &mkp LCLK  &mkp MCLK  &mkp MCLK  &mkp LCLK       &mkp RCLK     &trans     &to 0
            >;
        };

        misc {
            display-name = "misc";
            bindings = <
  &kp ESC      &trans   &trans    &trans    &trans  &trans  &trans  &trans  &trans  &kp EQUAL
  &kp CAPS     &kp TAB  &mkp MB2  &mkp MB1  &trans  &trans  &trans  &trans  &trans  &kp SEMI
  &shift_word  &trans   &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans       &trans   &trans    &kp TAB   &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
